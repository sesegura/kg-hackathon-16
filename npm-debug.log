0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'install', '-g', 'vue-cli' ]
2 info using npm@2.15.9
3 info using node@v4.5.0
4 verbose install initial load of /usr/lib/package.json
5 verbose readDependencies loading dependencies from /usr/lib/package.json
6 silly cache add args [ 'vue-cli', null ]
7 verbose cache add spec vue-cli
8 silly cache add parsed spec Result {
8 silly cache add   raw: 'vue-cli',
8 silly cache add   scope: null,
8 silly cache add   name: 'vue-cli',
8 silly cache add   rawSpec: '',
8 silly cache add   spec: 'latest',
8 silly cache add   type: 'tag' }
9 silly addNamed vue-cli@latest
10 verbose addNamed "latest" is being treated as a dist-tag for vue-cli
11 info addNameTag [ 'vue-cli', 'latest' ]
12 silly mapToRegistry name vue-cli
13 silly mapToRegistry using default registry
14 silly mapToRegistry registry https://registry.npmjs.org/
15 silly mapToRegistry data Result {
15 silly mapToRegistry   raw: 'vue-cli',
15 silly mapToRegistry   scope: null,
15 silly mapToRegistry   name: 'vue-cli',
15 silly mapToRegistry   rawSpec: '',
15 silly mapToRegistry   spec: 'latest',
15 silly mapToRegistry   type: 'tag' }
16 silly mapToRegistry uri https://registry.npmjs.org/vue-cli
17 verbose addNameTag registry:https://registry.npmjs.org/vue-cli not in flight; fetching
18 verbose request uri https://registry.npmjs.org/vue-cli
19 verbose request no auth needed
20 info attempt registry request try #1 at 1:20:38 PM
21 verbose request id e9945806e8d5c6ec
22 verbose etag "CU4KY78Q2YB63OP5PYWA63DEY"
23 http request GET https://registry.npmjs.org/vue-cli
24 http 304 https://registry.npmjs.org/vue-cli
25 verbose headers { date: 'Sat, 27 Aug 2016 19:20:38 GMT',
25 verbose headers   via: '1.1 varnish',
25 verbose headers   'cache-control': 'max-age=300',
25 verbose headers   etag: '"CU4KY78Q2YB63OP5PYWA63DEY"',
25 verbose headers   age: '63',
25 verbose headers   connection: 'keep-alive',
25 verbose headers   'x-served-by': 'cache-iad2122-IAD',
25 verbose headers   'x-cache': 'HIT',
25 verbose headers   'x-cache-hits': '1',
25 verbose headers   'x-timer': 'S1472325638.862650,VS0,VE0',
25 verbose headers   vary: 'Accept-Encoding' }
26 silly get cb [ 304,
26 silly get   { date: 'Sat, 27 Aug 2016 19:20:38 GMT',
26 silly get     via: '1.1 varnish',
26 silly get     'cache-control': 'max-age=300',
26 silly get     etag: '"CU4KY78Q2YB63OP5PYWA63DEY"',
26 silly get     age: '63',
26 silly get     connection: 'keep-alive',
26 silly get     'x-served-by': 'cache-iad2122-IAD',
26 silly get     'x-cache': 'HIT',
26 silly get     'x-cache-hits': '1',
26 silly get     'x-timer': 'S1472325638.862650,VS0,VE0',
26 silly get     vary: 'Accept-Encoding' } ]
27 verbose etag https://registry.npmjs.org/vue-cli from cache
28 verbose get saving vue-cli to /home/sebastiansegura/.npm/registry.npmjs.org/vue-cli/.cache.json
29 verbose correctMkdir /home/sebastiansegura/.npm correctMkdir not in flight; initializing
30 silly addNameTag next cb for vue-cli with tag latest
31 silly addNamed vue-cli@2.2.0
32 verbose addNamed "2.2.0" is a plain semver version for vue-cli
33 silly cache afterAdd vue-cli@2.2.0
34 verbose afterAdd /home/sebastiansegura/.npm/vue-cli/2.2.0/package/package.json not in flight; writing
35 verbose correctMkdir /home/sebastiansegura/.npm correctMkdir not in flight; initializing
36 verbose afterAdd /home/sebastiansegura/.npm/vue-cli/2.2.0/package/package.json written
37 silly install resolved [ { name: 'vue-cli',
37 silly install resolved     version: '2.2.0',
37 silly install resolved     description: 'A simple CLI for scaffolding Vue.js projects.',
37 silly install resolved     preferGlobal: true,
37 silly install resolved     bin: { vue: 'bin/vue' },
37 silly install resolved     repository: { type: 'git', url: 'git+https://github.com/vuejs/vue-cli.git' },
37 silly install resolved     keywords: [ 'vue', 'cli', 'spa' ],
37 silly install resolved     author: { name: 'Evan You' },
37 silly install resolved     license: 'MIT',
37 silly install resolved     bugs: { url: 'https://github.com/vuejs/vue-cli/issues' },
37 silly install resolved     homepage: 'https://github.com/vuejs/vue-cli#readme',
37 silly install resolved     main: 'lib/index.js',
37 silly install resolved     scripts:
37 silly install resolved      { test: 'npm run lint && npm run e2e',
37 silly install resolved        lint: 'eslint test/e2e/test.js lib bin/* --env mocha',
37 silly install resolved        e2e: 'rimraf test/e2e/mock-template-build/*.* && cross-env BABEL_ENV=development mocha test/e2e/test.js --slow 1000 --compilers js:babel-core/register' },
37 silly install resolved     dependencies:
37 silly install resolved      { async: '^2.0.0-rc.2',
37 silly install resolved        chalk: '^1.1.1',
37 silly install resolved        commander: '^2.9.0',
37 silly install resolved        consolidate: '^0.14.0',
37 silly install resolved        'download-git-repo': '^0.1.1',
37 silly install resolved        handlebars: '^4.0.5',
37 silly install resolved        inquirer: '^0.12.0',
37 silly install resolved        metalsmith: '^2.1.0',
37 silly install resolved        minimatch: '^3.0.0',
37 silly install resolved        ora: '^0.2.1',
37 silly install resolved        'read-metadata': '^1.0.0',
37 silly install resolved        request: '^2.67.0',
37 silly install resolved        rimraf: '^2.5.0',
37 silly install resolved        semver: '^5.1.0',
37 silly install resolved        uid: '0.0.2',
37 silly install resolved        'validate-npm-package-name': '^2.2.2' },
37 silly install resolved     devDependencies:
37 silly install resolved      { 'babel-core': '^6.7.4',
37 silly install resolved        'babel-preset-es2015': '^6.6.0',
37 silly install resolved        'babel-preset-stage-2': '^6.5.0',
37 silly install resolved        chai: '^3.5.0',
37 silly install resolved        'cross-env': '^1.0.7',
37 silly install resolved        eslint: '^2.7.0',
37 silly install resolved        'eslint-config-standard': '^5.1.0',
37 silly install resolved        'eslint-plugin-promise': '^1.1.0',
37 silly install resolved        'eslint-plugin-standard': '^1.3.2',
37 silly install resolved        mocha: '^2.4.5' },
37 silly install resolved     engines: { node: '>=4.0.0' },
37 silly install resolved     readme: '# vue-cli [![Build Status](https://img.shields.io/circleci/project/vuejs/vue-cli/master.svg)](https://circleci.com/gh/vuejs/vue-cli) [![npm package](https://img.shields.io/npm/v/vue-cli.svg)](https://www.npmjs.com/package/vue-cli)\n\nA simple CLI for scaffolding Vue.js projects.\n\n### Installation\n\nPrerequisites: [Node.js](https://nodejs.org/en/) (>=4.x, 5.x preferred) and [Git](https://git-scm.com/).\n\n``` bash\n$ npm install -g vue-cli\n```\n\n### Usage\n\n``` bash\n$ vue init <template-name> <project-name>\n```\n\nExample:\n\n``` bash\n$ vue init webpack my-project\n```\n\nThe above command pulls the template from [vuejs-templates/webpack](https://github.com/vuejs-templates/webpack), prompts for some information, and generates the project at `./my-project/`.\n\n### Official Templates\n\nThe purpose of official Vue project templates are to provide opinionated, battery-included development tooling setups so that users can get started with actual app code as fast as possible. However, these templates are un-opinionated in terms of how you structure your app code and what libraries you use in addition to Vue.js.\n\nAll official project templates are repos in the [vuejs-templates organization](https://github.com/vuejs-templates). When a new template is added to the organization, you will be able to run `vue init <template-name> <project-name>` to use that template. You can also run `vue list` to see all available official templates.\n\nCurrent available templates include:\n\n- [webpack](https://github.com/vuejs-templates/webpack) - A full-featured Webpack + vue-loader setup with hot reload, linting, testing & css extraction.\n\n- [webpack-simple](https://github.com/vuejs-templates/webpack-simple) - A simple Webpack + vue-loader setup for quick prototyping.\n\n- [browserify](https://github.com/vuejs-templates/browserify) - A full-featured Browserify + vueify setup with hot-reload, linting & unit testing.\n\n- [browserify-simple](https://github.com/vuejs-templates/browserify-simple) - A simple Browserify + vueify setup for quick prototyping.\n\n- [simple](https://github.com/vuejs-templates/simple) - The simplest possible Vue setup in a single HTML file\n\n### Custom Templates\n\nIt\'s unlikely to make everyone happy with the official templates. You can simply fork an official template and then use it via `vue-cli` with:\n\n``` bash\nvue init username/repo my-project\n```\n\nWhere `username/repo` is the GitHub repo shorthand for your fork.\n\nThe shorthand repo notation is passed to [download-git-repo](https://github.com/flipxfx/download-git-repo) so you can also use things like `bitbucket:username/repo` for a Bitbucket repo and `username/repo#branch` for tags or branches.\n\nIf you would like to download from a private repository use the `--clone` flag and the cli will use `git clone` so your SSH keys are used.\n\n### Local Templates\n\nInstead of a GitHub repo, you can also use a template on your local file system:\n\n``` bash\nvue init ~/fs/path/to-custom-template my-project\n```\n\n### Writing Custom Templates from Scratch\n\n- A template repo **must** have a `template` directory that holds the template files.\n\n- A template repo **may** have a metadata file for the template which can be either a `meta.js` or `meta.json` file. It can contain the following fields:\n\n  - `prompts`: used to collect user options data;\n\n  - `filters`: used to conditional filter files to render.\n\n  - `completeMessage`: the message to be displayed to the user when the template has been generated. You can include custom instruction here.\n\n#### prompts\n\nThe `prompts` field in the metadata file should be an object hash containing prompts for the user. For each entry, the key is the variable name and the value is an [Inquirer.js question object](https://github.com/SBoudrias/Inquirer.js/#question). Example:\n\n``` json\n{\n  "prompts": {\n    "name": {\n      "type": "string",\n      "required": true,\n      "message": "Project name"\n    }\n  }\n}\n```\n\nAfter all prompts are finished, all files inside `template` will be rendered using [Handlebars](http://handlebarsjs.com/), with the prompt results as the data.\n\n##### Conditional Prompts\n\nA prompt can be made conditional by adding a `when` field, which should be a JavaScript expression evaluated with data collected from previous prompts. For example:\n\n``` json\n{\n  "prompts": {\n    "lint": {\n      "type": "confirm",\n      "message": "Use a linter?"\n    },\n    "lintConfig": {\n      "when": "lint",\n      "type": "list",\n      "message": "Pick a lint config",\n      "choices": [\n        "standard",\n        "airbnb",\n        "none"\n      ]\n    }\n  }\n}\n```\n\nThe prompt for `lintConfig` will only be triggered when the user answered yes to the `lint` prompt.\n\n##### Pre-registered Handlebars Helpers\n\nTwo commonly used Handlebars helpers, `if_eq` and `unless_eq` are pre-registered:\n\n``` handlebars\n{{#if_eq lintConfig "airbnb"}};{{/if_eq}}\n```\n\n##### Custom Handlebars Helpers\n\nYou may want to register additional Handlebars helpers using the `helpers` property in the metadata file. The object key is the helper name:\n\n``` js\nmodule.exports = {\n  helpers: {\n    lowercase: str => str.toLowerCase()\n  }\n}\n```\n\nUpon registration, they can be used as follows:\n\n``` handlebars\n{{ lowercase name }}\n```\n\n#### File filters\n\nThe `filters` field in the metadata file should be an object hash containing file filtering rules. For each entry, the key is a [minimatch glob pattern](https://github.com/isaacs/minimatch) and the value is a JavaScript expression evaluated in the context of prompt answers data. Example:\n\n``` json\n{\n  "filters": {\n    "test/**/*": "needTests"\n  }\n}\n```\n\nFiles under `test` will only be generated if the user answered yes to the prompt for `needTests`.\n\nNote that the `dot` option for minimatch is set to `true` so glob patterns would also match dotfiles by default.\n\n### License\n\n[MIT](http://opensource.org/licenses/MIT)\n',
37 silly install resolved     readmeFilename: 'README.md',
37 silly install resolved     _id: 'vue-cli@2.2.0',
37 silly install resolved     _from: 'vue-cli@latest' } ]
38 info install vue-cli@2.2.0 into /usr/lib
39 info installOne vue-cli@2.2.0
40 verbose installOne of vue-cli to /usr/lib not in flight; installing
41 verbose correctMkdir /home/sebastiansegura/.npm/_locks correctMkdir not in flight; initializing
42 verbose lock using /home/sebastiansegura/.npm/_locks/vue-cli-09d66425c2acd6d5.lock for /usr/lib/node_modules/vue-cli
43 silly install write writing vue-cli 2.2.0 to /usr/lib/node_modules/vue-cli
44 verbose unbuild lib/node_modules/vue-cli
45 silly gentlyRm /usr/lib/node_modules/vue-cli is being purged from base /usr
46 verbose gentlyRm don't care about contents; nuking /usr/lib/node_modules/vue-cli
47 verbose tar unpack /home/sebastiansegura/.npm/vue-cli/2.2.0/package.tgz
48 verbose tar unpacking to /usr/lib/node_modules/vue-cli
49 silly gentlyRm /usr/lib/node_modules/vue-cli is being purged
50 verbose gentlyRm don't care about contents; nuking /usr/lib/node_modules/vue-cli
51 silly gunzTarPerm modes [ '775', '664' ]
52 error tar.unpack untar error /home/sebastiansegura/.npm/vue-cli/2.2.0/package.tgz
53 verbose unlock done using /home/sebastiansegura/.npm/_locks/vue-cli-09d66425c2acd6d5.lock for /usr/lib/node_modules/vue-cli
54 verbose fstream_path /usr/lib/node_modules/vue-cli
55 verbose fstream_type Directory
56 verbose fstream_class DirWriter
57 verbose stack Error: EACCES: permission denied, mkdir '/usr/lib/node_modules/vue-cli'
57 verbose stack     at Error (native)
58 verbose fstream_stack /usr/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:35:25
58 verbose fstream_stack /usr/lib/node_modules/npm/node_modules/mkdirp/index.js:47:53
58 verbose fstream_stack FSReqWrap.oncomplete (fs.js:82:15)
59 verbose cwd /home/sebastiansegura/Documents/KG-Hackathon/kg-hackathon-16
60 error Linux 3.19.0-65-generic
61 error argv "/usr/bin/nodejs" "/usr/bin/npm" "install" "-g" "vue-cli"
62 error node v4.5.0
63 error npm  v2.15.9
64 error path /usr/lib/node_modules/vue-cli
65 error code EACCES
66 error errno -13
67 error syscall mkdir
68 error Error: EACCES: permission denied, mkdir '/usr/lib/node_modules/vue-cli'
68 error     at Error (native)
68 error  { [Error: EACCES: permission denied, mkdir '/usr/lib/node_modules/vue-cli']
68 error   errno: -13,
68 error   code: 'EACCES',
68 error   syscall: 'mkdir',
68 error   path: '/usr/lib/node_modules/vue-cli',
68 error   fstream_type: 'Directory',
68 error   fstream_path: '/usr/lib/node_modules/vue-cli',
68 error   fstream_class: 'DirWriter',
68 error   fstream_stack:
68 error    [ '/usr/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:35:25',
68 error      '/usr/lib/node_modules/npm/node_modules/mkdirp/index.js:47:53',
68 error      'FSReqWrap.oncomplete (fs.js:82:15)' ] }
69 error Please try running this command again as root/Administrator.
70 verbose exit [ -13, true ]
71 verbose unbuild lib/node_modules/vue-cli
72 silly gentlyRm /usr/lib/node_modules/vue-cli is being purged from base /usr
73 verbose gentlyRm don't care about contents; nuking /usr/lib/node_modules/vue-cli
